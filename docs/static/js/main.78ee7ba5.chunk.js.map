{"version":3,"sources":["App.js","serviceWorker.js","index.js","pupper.jpg"],"names":["App","console","log","TweenMax","set","scale","xPercent","yPercent","transformOrigin","to","ease","Power2","easeOut","rotation","react_default","a","createElement","className","src","pupper","alt","href","onMouseEnter","this","handleEnterSeven","onMouseLeave","handleExitSeven","viewBox","role","clipPath","width","height","id","class","d","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.78ee7ba5.chunk.js","sourcesContent":["import React from 'react';\nimport { TweenMax, Power2 } from 'gsap/TweenMax';\nimport './App.css';\nimport pupper from './pupper.jpg';\n\nclass App extends React.Component {\n  componentDidMount() {\n    console.log('go');\n    TweenMax.set('.clipPath', {\n      scale: 3.6,\n      xPercent: 150,\n      yPercent: 150,\n      // gsap transform origin better than css\n      transformOrigin: '50% 50%',\n    });\n  }\n  handleEnterSeven() {\n    TweenMax.to('.clipPath', 0.35, {\n      scale: 3.1,\n      transformOrigin: '50% 50%',\n      // can rotate if you want:\n      // rotation: 90,\n      ease: Power2.easeOut,\n      // note: can also directly transform svg attributes\n      // attr: {\n      //   r: 300,\n      // },\n    });\n    TweenMax.to('.maskedImage', 0.35, {\n      scale: 1.075,\n      transformOrigin: '50% 50%',\n      ease: Power2.easeOut,\n    });\n  }\n  handleExitSeven() {\n    TweenMax.to('.clipPath', 0.4, {\n      scale: 3.6,\n      transformOrigin: '50% 50%',\n      rotation: 0,\n      ease: Power2.easeOut,\n    });\n    TweenMax.to('.maskedImage', 0.4, {\n      scale: 1,\n      transformOrigin: '50% 50%',\n      ease: Power2.easeOut,\n    });\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>SVG/Image Mask Tests</h1>\n        <p>Note, should check these out in various browsers...</p>\n        <div className=\"container\">\n          <h2>Test 1: Image with PNG mask-image on Img</h2>\n          <p>\n            When mask is on img, scale effects mask as well.{' '}\n            <strong>Some flicker</strong>\n          </p>\n          <div className=\"test test1\">\n            <img src={pupper} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"container\">\n          <h2>Test 2: Image with PNG mask-image on Conatiner, scale image</h2>\n          <p>Hover for subtle scale.</p>\n          <div className=\"test test2\">\n            <img src={pupper} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"container\">\n          <h2>Test 3: Image with PNG mask-image on Conatiner, reverse scale</h2>\n          <p>\n            Hover for subtle scale. <strong>Some flicker</strong>\n          </p>\n          <div className=\"test test3\">\n            <img src={pupper} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"container\">\n          <h2>Test 4: Mask size zoom out</h2>\n          <p>Hover for subtle scale.</p>\n          <div className=\"test test4\">\n            <img src={pupper} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"container\">\n          <h2>Test 5: Mask size zoom in</h2>\n          <p>Hover for subtle scale.</p>\n          <div className=\"test test5\">\n            <img src={pupper} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"container\">\n          <h2>Test 6: Nested Masks</h2>\n          <p>Hover for subtle scale.</p>\n          <div className=\"test test6\">\n            <div className=\"test innerMask\">\n              <img src={pupper} alt=\"\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <h2>Test 7: SVG clip path + GSAP</h2>\n          <p>\n            <a href=\"https://tympanus.net/codrops/2015/06/18/card-expansion-effect-svg-clippath/\">\n              https://tympanus.net/codrops/2015/06/18/card-expansion-effect-svg-clippath/\n            </a>\n          </p>\n          <p>Hover for subtle scale.</p>\n          <div\n            className=\"test test7\"\n            onMouseEnter={this.handleEnterSeven}\n            onMouseLeave={this.handleExitSeven}\n          >\n            <svg viewBox=\"0 0 682 625\" role=\"img\">\n              <title>Img alt text</title>\n              <image\n                className=\"maskedImage\"\n                clipPath=\"url(#clipPath1)\"\n                width=\"682\"\n                height=\"625\"\n                href={pupper}\n              />\n            </svg>\n            <svg viewBox=\"0 0 682 625\">\n              <defs>\n                <clipPath id=\"clipPath1\">\n                  <path\n                    class=\"clipPath\"\n                    d=\"M170.43,156,162.5,11.46C139.81,4.18,113.41,0,85.22,0S30.62,4.18,7.94,11.46L0,156Z\"\n                  />\n                </clipPath>\n              </defs>\n            </svg>\n          </div>\n        </div>\n        <div className=\"container\">\n          <h2>Test 8: Canvas</h2>\n          <p>Can get into these funky canvas methods if we need to:</p>\n          <p>\n            <a href=\"https://codepen.io/shshaw/pen/PPEMYX\">\n              https://codepen.io/shshaw/pen/PPEMYX\n            </a>\n          </p>\n          <p>\n            <a href=\"https://codepen.io/njmcode/pen/XbdjQz\">\n              https://codepen.io/njmcode/pen/XbdjQz\n            </a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n// <clipPath id=\"clipPath1\">\n//   <path\n//     class=\"clipPath\"\n//     transform=\"translate(100 100) scale(4)\"\n//     d=\"M170.43,156,162.5,11.46C139.81,4.18,113.41,0,85.22,0S30.62,4.18,7.94,11.46L0,156Z\"\n//   />\n// </clipPath>\n// <circle className=\"clip\" cx=\"150\" cy=\"150\" r=\"300\" />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/pupper.99a0a237.jpg\";"],"sourceRoot":""}